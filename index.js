const express = require("express");
const axios = require("axios");
const fs = require("fs");

const app = express();
const PORT = process.env.PORT || 3000;

// --- C·∫•u h√¨nh file d·ªØ li·ªáu ---
const DATA_FILE = "./data.json";
const HISTORY_FILE = "./history.json";

let pattern = [];
let lastPhien = null;
let lastData = {};
let history = [];

// -----------------------------
// 1Ô∏è‚É£ Load d·ªØ li·ªáu t·ª´ file khi kh·ªüi ƒë·ªông
// -----------------------------
function loadData() {
  try {
    if (fs.existsSync(DATA_FILE)) {
      const saved = JSON.parse(fs.readFileSync(DATA_FILE, "utf8"));
      pattern = saved.pattern || [];
      lastPhien = saved.lastPhien || null;
      console.log(`üìÇ ƒê√£ t·∫£i ${pattern.length} k·∫øt qu·∫£ tr∆∞·ªõc ƒë√≥`);
    }
    if (fs.existsSync(HISTORY_FILE)) {
      history = JSON.parse(fs.readFileSync(HISTORY_FILE, "utf8"));
    }
  } catch (err) {
    console.log("‚ö†Ô∏è L·ªói ƒë·ªçc file:", err.message);
  }
}

// -----------------------------
// 2Ô∏è‚É£ L∆∞u d·ªØ li·ªáu ra file
// -----------------------------
function saveData() {
  try {
    fs.writeFileSync(DATA_FILE, JSON.stringify({ pattern, lastPhien }, null, 2));
    fs.writeFileSync(HISTORY_FILE, JSON.stringify(history, null, 2));
  } catch (err) {
    console.log("‚ö†Ô∏è L·ªói l∆∞u file:", err.message);
  }
}

// -----------------------------
// 3Ô∏è‚É£ L·∫•y d·ªØ li·ªáu m·ªõi t·ª´ API g·ªëc
// -----------------------------
async function getLatestResult() {
  try {
    const res = await axios.get("https://66.bot/GetNewLottery/LT_TaixiuMD5", {
      timeout: 4000,
      headers: { "User-Agent": "Mozilla/5.0" },
    });

    const data = res.data?.data || res.data;
    if (!data) return null;

    const phien = data.issue || Date.now();
    const xuc_xac = [data.num1, data.num2, data.num3];
    const tong = xuc_xac.reduce((a, b) => a + b, 0);
    const ket_qua = tong >= 11 ? "T√†i" : "X·ªâu";

    return { phien, xuc_xac, tong, ket_qua };
  } catch (err) {
    console.log("‚ö†Ô∏è L·ªói l·∫•y d·ªØ li·ªáu:", err.message);
    return null;
  }
}

// -----------------------------
// 4Ô∏è‚É£ Thu·∫≠t to√°n ph√¢n t√≠ch nhi·ªÅu lo·∫°i c·∫ßu
// -----------------------------
function duDoanTaiXiu(pattern) {
  if (pattern.length < 6)
    return { du_doan: "ƒêang thu th·∫≠p d·ªØ li·ªáu...", loai_cau: "Kh·ªüi t·∫°o", do_tin_cay: "0%" };

  const last6 = pattern.slice(-6);
  const patternStr = last6.join("");

  // ‚úÖ C·∫ßu Luck8 nghi√™ng
  const taiCount6 = last6.filter((v) => v === "T√†i").length;
  const xiuCount6 = 6 - taiCount6;
  if (taiCount6 >= 4)
    return { du_doan: "T√†i", loai_cau: "C·∫ßu Luck8 nghi√™ng T√†i", do_tin_cay: "88%" };
  if (xiuCount6 >= 4)
    return { du_doan: "X·ªâu", loai_cau: "C·∫ßu Luck8 nghi√™ng X·ªâu", do_tin_cay: "88%" };

  // ‚úÖ C·∫ßu l·∫∑p
  const last3 = pattern.slice(-3);
  if (last3.every((v) => v === last3[0])) {
    return { du_doan: last3[0], loai_cau: "C·∫ßu l·∫∑p", do_tin_cay: "93%" };
  }

  // ‚úÖ C·∫ßu ƒë·∫£o
  const isDao = last6.every((v, i) => (i === 0 ? true : v !== last6[i - 1]));
  if (isDao) {
    const next = last6[last6.length - 1] === "T√†i" ? "X·ªâu" : "T√†i";
    return { du_doan: next, loai_cau: "C·∫ßu ƒë·∫£o Luck8", do_tin_cay: "86%" };
  }

  // ‚úÖ C·∫ßu 2-1
  if (patternStr.endsWith("TTX"))
    return { du_doan: "X·ªâu", loai_cau: "C·∫ßu 2-1 TTX", do_tin_cay: "80%" };
  if (patternStr.endsWith("XXT"))
    return { du_doan: "T√†i", loai_cau: "C·∫ßu 2-1 XXT", do_tin_cay: "80%" };

  // ‚úÖ C·∫ßu chu·ªói ƒë·∫£o
  if (patternStr.endsWith("TTXX"))
    return { du_doan: "T√†i", loai_cau: "C·∫ßu chu·ªói ƒë·∫£o", do_tin_cay: "83%" };
  if (patternStr.endsWith("XXTT"))
    return { du_doan: "X·ªâu", loai_cau: "C·∫ßu chu·ªói ƒë·∫£o", do_tin_cay: "83%" };

  // ‚úÖ Th·ªëng k√™ t·ªïng th·ªÉ
  const taiCount = pattern.filter((v) => v === "T√†i").length;
  const xiuCount = pattern.filter((v) => v === "X·ªâu").length;
  const du_doan = taiCount > xiuCount ? "X·ªâu" : "T√†i";
  const do_tin_cay = `${70 + Math.floor(Math.random() * 10)}%`;

  return { du_doan, loai_cau: "Th·ªëng k√™ t·ªïng th·ªÉ", do_tin_cay };
}

// -----------------------------
// 5Ô∏è‚É£ C·∫≠p nh·∫≠t d·ªØ li·ªáu m·ªói 5s
// -----------------------------
async function updateData() {
  const kq = await getLatestResult();
  if (!kq) return;

  // Khi c√≥ phi√™n m·ªõi
  if (kq.phien !== lastPhien) {
    lastPhien = kq.phien;
    pattern.push(kq.ket_qua);

    // Khi ƒë·∫°t 30 phi√™n, reset pattern c√≤n 5 phi√™n m·ªõi nh·∫•t
    if (pattern.length >= 30) {
      pattern = pattern.slice(-5);
      console.log("üîÅ Reset pattern (ch·ªâ gi·ªØ 5 phi√™n m·ªõi nh·∫•t)");
    }

    const { du_doan, loai_cau, do_tin_cay } = duDoanTaiXiu(pattern);

    lastData = {
      phien: kq.phien,
      ket_qua: kq.ket_qua,
      xuc_xac: kq.xuc_xac,
      tong: kq.tong,
      du_doan,
      do_tin_cay,
      loai_cau,
      pattern_length: pattern.length,
      dev: "@minhsangdangcap",
      last_update: new Date().toLocaleString("vi-VN"),
    };

    // Ghi l·ªãch s·ª≠
    history.push(lastData);
    if (history.length > 200) history.shift();

    saveData();

    console.log(
      `‚úÖ Phi√™n ${kq.phien}: ${kq.ket_qua} ‚Üí D·ª± ƒëo√°n: ${du_doan} (${loai_cau})`
    );
  }
}

// -----------------------------
// 6Ô∏è‚É£ API public JSON
// -----------------------------
app.get("/api", (req, res) => {
  res.json(lastData || { status: "ƒêang kh·ªüi t·∫°o d·ªØ li·ªáu..." });
});

app.get("/history", (req, res) => {
  res.json(history.slice(-30)); // ch·ªâ tr·∫£ 30 phi√™n g·∫ßn nh·∫•t
});

// -----------------------------
// 7Ô∏è‚É£ Auto update 5s/l·∫ßn
// -----------------------------
loadData();
setInterval(updateData, 5000);

app.listen(PORT, () => {
  console.log(`üöÄ Server Luck8 AI v2.2 ch·∫°y t·∫°i c·ªïng ${PORT}`);
});
